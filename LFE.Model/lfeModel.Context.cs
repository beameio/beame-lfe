//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LFE.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class lfeAuthorEntities : DbContext
    {
        public lfeAuthorEntities()
            : base("name=lfeAuthorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<ChapterLinks> ChapterLinks { get; set; }
        public virtual DbSet<ChapterVideos> ChapterVideos { get; set; }
        public virtual DbSet<CourseCategories> CourseCategories { get; set; }
        public virtual DbSet<CourseChapters> CourseChapters { get; set; }
        public virtual DbSet<CourseLinks> CourseLinks { get; set; }
        public virtual DbSet<UserS3FileInterface> UserS3FileInterface { get; set; }
        public virtual DbSet<UserCourseReviews> UserCourseReviews { get; set; }
        public virtual DbSet<WebStoreCategories> WebStoreCategories { get; set; }
        public virtual DbSet<DSC_MessageUsers> DSC_MessageUsers { get; set; }
        public virtual DbSet<DSC_Followers> DSC_Followers { get; set; }
        public virtual DbSet<DSC_ClassRoom> DSC_ClassRoom { get; set; }
        public virtual DbSet<DSC_Messages> DSC_Messages { get; set; }
        public virtual DbSet<UserNotifications> UserNotifications { get; set; }
        public virtual DbSet<EMAIL_Messages> EMAIL_Messages { get; set; }
        public virtual DbSet<DSC_Hashtags> DSC_Hashtags { get; set; }
        public virtual DbSet<DSC_MessageHashtags> DSC_MessageHashtags { get; set; }
        public virtual DbSet<vw_DSC_MessageHashtags> vw_DSC_MessageHashtags { get; set; }
        public virtual DbSet<EMAIL_Templates> EMAIL_Templates { get; set; }
        public virtual DbSet<WebStoresChangeLog> WebStoresChangeLog { get; set; }
        public virtual DbSet<UserProfile> UserProfile { get; set; }
        public virtual DbSet<WebStores> WebStores { get; set; }
        public virtual DbSet<UserSessions> UserSessions { get; set; }
        public virtual DbSet<UserSessionsEventLogs> UserSessionsEventLogs { get; set; }
        public virtual DbSet<CRS_CourseChangeLog> CRS_CourseChangeLog { get; set; }
        public virtual DbSet<FB_PostInterface> FB_PostInterface { get; set; }
        public virtual DbSet<PAYPAL_PaymentRequests> PAYPAL_PaymentRequests { get; set; }
        public virtual DbSet<USER_PaymentInstruments> USER_PaymentInstruments { get; set; }
        public virtual DbSet<GEO_States> GEO_States { get; set; }
        public virtual DbSet<USER_Addresses> USER_Addresses { get; set; }
        public virtual DbSet<PAYPAL_IpnLogs> PAYPAL_IpnLogs { get; set; }
        public virtual DbSet<SALE_Transactions> SALE_Transactions { get; set; }
        public virtual DbSet<vw_SALE_Transactions> vw_SALE_Transactions { get; set; }
        public virtual DbSet<SALE_Orders> SALE_Orders { get; set; }
        public virtual DbSet<SALE_OrderLinePaymentRefunds> SALE_OrderLinePaymentRefunds { get; set; }
        public virtual DbSet<SALE_OrderLines> SALE_OrderLines { get; set; }
        public virtual DbSet<vw_SALE_Orders> vw_SALE_Orders { get; set; }
        public virtual DbSet<SALE_OrderLinePayments> SALE_OrderLinePayments { get; set; }
        public virtual DbSet<CRS_BundleCategories> CRS_BundleCategories { get; set; }
        public virtual DbSet<CRS_BundleCourses> CRS_BundleCourses { get; set; }
        public virtual DbSet<CouponInstances> CouponInstances { get; set; }
        public virtual DbSet<Coupons> Coupons { get; set; }
        public virtual DbSet<USER_Bundles> USER_Bundles { get; set; }
        public virtual DbSet<USER_Courses> USER_Courses { get; set; }
        public virtual DbSet<USER_CourseWatchState> USER_CourseWatchState { get; set; }
        public virtual DbSet<WebStoreItems> WebStoreItems { get; set; }
        public virtual DbSet<GEO_CountriesLib> GEO_CountriesLib { get; set; }
        public virtual DbSet<vw_SALE_OrderLinePaymentRefunds> vw_SALE_OrderLinePaymentRefunds { get; set; }
        public virtual DbSet<webpages_Membership> webpages_Membership { get; set; }
        public virtual DbSet<vw_EVENT_Logs> vw_EVENT_Logs { get; set; }
        public virtual DbSet<FACT_DailyStats> FACT_DailyStats { get; set; }
        public virtual DbSet<FACT_DailyTotals> FACT_DailyTotals { get; set; }
        public virtual DbSet<FACT_EventAgg> FACT_EventAgg { get; set; }
        public virtual DbSet<vw_FACT_EventAggregates> vw_FACT_EventAggregates { get; set; }
        public virtual DbSet<USER_Videos> USER_Videos { get; set; }
        public virtual DbSet<vw_USER_EventsLog> vw_USER_EventsLog { get; set; }
        public virtual DbSet<BILL_ItemsPriceList> BILL_ItemsPriceList { get; set; }
        public virtual DbSet<BASE_CurrencyLib> BASE_CurrencyLib { get; set; }
        public virtual DbSet<BILL_ItemsPriceRevisions> BILL_ItemsPriceRevisions { get; set; }
        public virtual DbSet<CRS_Bundles> CRS_Bundles { get; set; }
        public virtual DbSet<vw_USER_Items> vw_USER_Items { get; set; }
        public virtual DbSet<APP_PluginInstallations> APP_PluginInstallations { get; set; }
        public virtual DbSet<APP_PluginInstallationStores> APP_PluginInstallationStores { get; set; }
        public virtual DbSet<CHIMP_ListSegments> CHIMP_ListSegments { get; set; }
        public virtual DbSet<CHIMP_UserLists> CHIMP_UserLists { get; set; }
        public virtual DbSet<CHIMP_Rejects> CHIMP_Rejects { get; set; }
        public virtual DbSet<USER_Logins> USER_Logins { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<vw_USER_UserLogins> vw_USER_UserLogins { get; set; }
        public virtual DbSet<vw_USER_UsersLib> vw_USER_UsersLib { get; set; }
        public virtual DbSet<SALE_RefundRequests> SALE_RefundRequests { get; set; }
        public virtual DbSet<vw_SALE_OrderLinePayments> vw_SALE_OrderLinePayments { get; set; }
        public virtual DbSet<vw_SALE_OrderLines> vw_SALE_OrderLines { get; set; }
        public virtual DbSet<ApiSessions> ApiSessions { get; set; }
        public virtual DbSet<FB_ActionsLOV> FB_ActionsLOV { get; set; }
        public virtual DbSet<PendingPayPalTransactions> PendingPayPalTransactions { get; set; }
        public virtual DbSet<StatusLOV> StatusLOV { get; set; }
        public virtual DbSet<Tags> Tags { get; set; }
        public virtual DbSet<USER_RefundProgramRevisions> USER_RefundProgramRevisions { get; set; }
        public virtual DbSet<UsersAgents> UsersAgents { get; set; }
        public virtual DbSet<UserStatusTypes> UserStatusTypes { get; set; }
        public virtual DbSet<UserTypes> UserTypes { get; set; }
        public virtual DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public virtual DbSet<webpages_Roles> webpages_Roles { get; set; }
        public virtual DbSet<vw_SALE_OrderLinePaymentsTotalRefunds> vw_SALE_OrderLinePaymentsTotalRefunds { get; set; }
        public virtual DbSet<vw_SALE_OrderLinesTotalRefunds> vw_SALE_OrderLinesTotalRefunds { get; set; }
        public virtual DbSet<vw_SALE_OrderLineTotalPayments> vw_SALE_OrderLineTotalPayments { get; set; }
        public virtual DbSet<vw_SALE_OrderTotalPayments> vw_SALE_OrderTotalPayments { get; set; }
        public virtual DbSet<vw_USER_Authors> vw_USER_Authors { get; set; }
        public virtual DbSet<vw_USER_Statistics> vw_USER_Statistics { get; set; }
        public virtual DbSet<vw_WS_StoresLib> vw_WS_StoresLib { get; set; }
        public virtual DbSet<CRS_WizardStepsLOV> CRS_WizardStepsLOV { get; set; }
        public virtual DbSet<LogTable> LogTable { get; set; }
        public virtual DbSet<PO_PayoutExecutions> PO_PayoutExecutions { get; set; }
        public virtual DbSet<PO_UserPayoutStatments> PO_UserPayoutStatments { get; set; }
        public virtual DbSet<DB_CustomEvents> DB_CustomEvents { get; set; }
        public virtual DbSet<Courses> Courses { get; set; }
        public virtual DbSet<USER_VideoStats> USER_VideoStats { get; set; }
        public virtual DbSet<CRS_Assets> CRS_Assets { get; set; }
        public virtual DbSet<QZ_QuestionAnswerOptions> QZ_QuestionAnswerOptions { get; set; }
        public virtual DbSet<QZ_StudentQuizAnswers> QZ_StudentQuizAnswers { get; set; }
        public virtual DbSet<QZ_StudentQuizAttempts> QZ_StudentQuizAttempts { get; set; }
        public virtual DbSet<QZ_QuizQuestionsLib> QZ_QuizQuestionsLib { get; set; }
        public virtual DbSet<QZ_StudentQuizzes> QZ_StudentQuizzes { get; set; }
        public virtual DbSet<vw_QZ_QuizQuestionsLib> vw_QZ_QuizQuestionsLib { get; set; }
        public virtual DbSet<QZ_CourseQuizzes> QZ_CourseQuizzes { get; set; }
        public virtual DbSet<vw_QZ_CourseQuizzes> vw_QZ_CourseQuizzes { get; set; }
        public virtual DbSet<CERT_CertificateLib> CERT_CertificateLib { get; set; }
        public virtual DbSet<CERT_TemplatesLOV> CERT_TemplatesLOV { get; set; }
        public virtual DbSet<CERT_StudentCertificates> CERT_StudentCertificates { get; set; }
        public virtual DbSet<vw_CERT_StudentCertificates> vw_CERT_StudentCertificates { get; set; }
        public virtual DbSet<vw_WS_Items> vw_WS_Items { get; set; }
        public virtual DbSet<ADMIN_DeletedVideosLog> ADMIN_DeletedVideosLog { get; set; }
        public virtual DbSet<USER_VideosRenditions> USER_VideosRenditions { get; set; }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetBundles")]
        public virtual IQueryable<CRS_BundleListToken> tvf_USER_GetBundles(Nullable<int> authorID)
        {
            var authorIDParameter = authorID.HasValue ?
                new ObjectParameter("AuthorID", authorID) :
                new ObjectParameter("AuthorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_BundleListToken>("[lfeAuthorEntities].[tvf_USER_GetBundles](@AuthorID)", authorIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetCourseReviews")]
        public virtual IQueryable<USER_ReviewToken> tvf_USER_GetCourseReviews(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> authorId, Nullable<int> courseId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_ReviewToken>("[lfeAuthorEntities].[tvf_USER_GetCourseReviews](@from, @to, @AuthorId, @CourseId)", fromParameter, toParameter, authorIdParameter, courseIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetCourses")]
        public virtual IQueryable<USER_CourseListToken> tvf_USER_GetCourses(Nullable<short> currencyId, Nullable<int> authorID)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var authorIDParameter = authorID.HasValue ?
                new ObjectParameter("AuthorID", authorID) :
                new ObjectParameter("AuthorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_CourseListToken>("[lfeAuthorEntities].[tvf_USER_GetCourses](@CurrencyId, @AuthorID)", currencyIdParameter, authorIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetUsers")]
        public virtual IQueryable<Users> tvf_USER_GetUsers(Nullable<int> userId, Nullable<int> statusId, Nullable<int> typeId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Users>("[lfeAuthorEntities].[tvf_USER_GetUsers](@UserId, @StatusId, @TypeId)", userIdParameter, statusIdParameter, typeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetVideos")]
        public virtual IQueryable<USER_VideoToken> tvf_USER_GetVideos(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_VideoToken>("[lfeAuthorEntities].[tvf_USER_GetVideos](@UserId)", userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetOtherLearners")]
        public virtual IQueryable<CRS_LearnerToken> tvf_CRS_GetOtherLearners(Nullable<int> userId, Nullable<int> courseId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_LearnerToken>("[lfeAuthorEntities].[tvf_CRS_GetOtherLearners](@UserId, @CourseId)", userIdParameter, courseIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetEventsLog")]
        public virtual IQueryable<vw_USER_EventsLog> tvf_USER_GetEventsLog(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<int> courseId, Nullable<int> bundleId, Nullable<int> storeId, Nullable<long> sessionId, Nullable<short> eventTypeID)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(long));
    
            var eventTypeIDParameter = eventTypeID.HasValue ?
                new ObjectParameter("EventTypeID", eventTypeID) :
                new ObjectParameter("EventTypeID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<vw_USER_EventsLog>("[lfeAuthorEntities].[tvf_USER_GetEventsLog](@from, @to, @UserId, @CourseId, @BundleId, @StoreId, @SessionId, @EventTypeID)", fromParameter, toParameter, userIdParameter, courseIdParameter, bundleIdParameter, storeIdParameter, sessionIdParameter, eventTypeIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_GetStores")]
        public virtual IQueryable<WS_StoreListToken> tvf_WS_GetStores(Nullable<int> ownerId)
        {
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_StoreListToken>("[lfeAuthorEntities].[tvf_WS_GetStores](@OwnerId)", ownerIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CAT_GetCategoriesWithCourseCount")]
        public virtual IQueryable<CAT_CategoryListToken> tvf_CAT_GetCategoriesWithCourseCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CAT_CategoryListToken>("[lfeAuthorEntities].[tvf_CAT_GetCategoriesWithCourseCount]()");
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_GetCoursesByCategory")]
        public virtual IQueryable<WS_ItemCandidateToken> tvf_WS_GetCoursesByCategory(Nullable<int> categoryId, Nullable<int> webStoreCategoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var webStoreCategoryIdParameter = webStoreCategoryId.HasValue ?
                new ObjectParameter("WebStoreCategoryId", webStoreCategoryId) :
                new ObjectParameter("WebStoreCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_ItemCandidateToken>("[lfeAuthorEntities].[tvf_WS_GetCoursesByCategory](@CategoryId, @WebStoreCategoryId)", categoryIdParameter, webStoreCategoryIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_GetCoursesByAuthor")]
        public virtual IQueryable<WS_ItemCandidateToken> tvf_WS_GetCoursesByAuthor(Nullable<int> authorId, Nullable<int> webStoreCategoryId)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var webStoreCategoryIdParameter = webStoreCategoryId.HasValue ?
                new ObjectParameter("WebStoreCategoryId", webStoreCategoryId) :
                new ObjectParameter("WebStoreCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_ItemCandidateToken>("[lfeAuthorEntities].[tvf_WS_GetCoursesByAuthor](@AuthorId, @WebStoreCategoryId)", authorIdParameter, webStoreCategoryIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetAuthorsWithCourseCount")]
        public virtual IQueryable<USER_AuthorWithCourseCountToken> tvf_USER_GetAuthorsWithCourseCount(Nullable<bool> onlyPublished)
        {
            var onlyPublishedParameter = onlyPublished.HasValue ?
                new ObjectParameter("OnlyPublished", onlyPublished) :
                new ObjectParameter("OnlyPublished", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_AuthorWithCourseCountToken>("[lfeAuthorEntities].[tvf_USER_GetAuthorsWithCourseCount](@OnlyPublished)", onlyPublishedParameter);
        }
    
        public virtual ObjectResult<WIDGET_CourseListToken> sp_WIDGET_GetCourses(Nullable<short> currencyId, Nullable<int> categoryID, Nullable<int> pageID, string trackingID, string sort, string sortDirection, Nullable<int> pagesize, string wixViewMode, Nullable<int> userID)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(short));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("pageID", pageID) :
                new ObjectParameter("pageID", typeof(int));
    
            var trackingIDParameter = trackingID != null ?
                new ObjectParameter("trackingID", trackingID) :
                new ObjectParameter("trackingID", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var wixViewModeParameter = wixViewMode != null ?
                new ObjectParameter("WixViewMode", wixViewMode) :
                new ObjectParameter("WixViewMode", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WIDGET_CourseListToken>("sp_WIDGET_GetCourses", currencyIdParameter, categoryIDParameter, pageIDParameter, trackingIDParameter, sortParameter, sortDirectionParameter, pagesizeParameter, wixViewModeParameter, userIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DSC_GetAuhtorRooms")]
        public virtual IQueryable<DSC_AuhtorRoomToken> tvf_DSC_GetAuhtorRooms(Nullable<int> authorId)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DSC_AuhtorRoomToken>("[lfeAuthorEntities].[tvf_DSC_GetAuhtorRooms](@AuthorId)", authorIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DSC_GetRoomMessages")]
        public virtual IQueryable<DSC_RoomMessageToken> tvf_DSC_GetRoomMessages(Nullable<int> roomId)
        {
            var roomIdParameter = roomId.HasValue ?
                new ObjectParameter("RoomId", roomId) :
                new ObjectParameter("RoomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DSC_RoomMessageToken>("[lfeAuthorEntities].[tvf_DSC_GetRoomMessages](@RoomId)", roomIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetNotifications")]
        public virtual IQueryable<USER_NotificationToken> tvf_USER_GetNotifications(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_NotificationToken>("[lfeAuthorEntities].[tvf_USER_GetNotifications](@UserId)", userIdParameter);
        }
    
        public virtual int sp_USER_UpdateNotificationStatus(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_USER_UpdateNotificationStatus", userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DSC_GetMessage")]
        public virtual IQueryable<DSC_RoomMessageToken> tvf_DSC_GetMessage(Nullable<System.Guid> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DSC_RoomMessageToken>("[lfeAuthorEntities].[tvf_DSC_GetMessage](@Uid)", uidParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DSC_GetMessageNotifications4FB")]
        public virtual IQueryable<DSC_NotificationsFbToken> tvf_DSC_GetMessageNotifications4FB(Nullable<long> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DSC_NotificationsFbToken>("[lfeAuthorEntities].[tvf_DSC_GetMessageNotifications4FB](@MessageId)", messageIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_EMAIL_GetNotificationMessages")]
        public virtual IQueryable<EMAIL_NotificationMessageToken> tvf_EMAIL_GetNotificationMessages(Nullable<long> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EMAIL_NotificationMessageToken>("[lfeAuthorEntities].[tvf_EMAIL_GetNotificationMessages](@MessageId)", messageIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetAllCourseReviews")]
        public virtual IQueryable<USER_ReviewToken> tvf_USER_GetAllCourseReviews(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_ReviewToken>("[lfeAuthorEntities].[tvf_USER_GetAllCourseReviews](@CourseId)", courseIdParameter);
        }
    
        public virtual ObjectResult<WIDGET_CourseListToken> sp_WIDGET_GetUsersCourses(Nullable<short> currencyId, Nullable<int> userID, Nullable<int> pageID, string sort, string sortDirection, Nullable<int> pagesize)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(short));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("pageID", pageID) :
                new ObjectParameter("pageID", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WIDGET_CourseListToken>("sp_WIDGET_GetUsersCourses", currencyIdParameter, userIDParameter, pageIDParameter, sortParameter, sortDirectionParameter, pagesizeParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_LRNR_GetCourses")]
        public virtual IQueryable<LRNR_ItemToken> tvf_LRNR_GetCourses(Nullable<short> currencyId, Nullable<int> learnerId, Nullable<int> userID)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var learnerIdParameter = learnerId.HasValue ?
                new ObjectParameter("LearnerId", learnerId) :
                new ObjectParameter("LearnerId", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LRNR_ItemToken>("[lfeAuthorEntities].[tvf_LRNR_GetCourses](@CurrencyId, @LearnerId, @UserID)", currencyIdParameter, learnerIdParameter, userIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetAuthorCourses")]
        public virtual IQueryable<USER_CourseToken> tvf_USER_GetAuthorCourses(Nullable<short> currencyId, Nullable<int> authorID, Nullable<int> userID)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var authorIDParameter = authorID.HasValue ?
                new ObjectParameter("AuthorID", authorID) :
                new ObjectParameter("AuthorID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_CourseToken>("[lfeAuthorEntities].[tvf_USER_GetAuthorCourses](@CurrencyId, @AuthorID, @UserID)", currencyIdParameter, authorIDParameter, userIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DSC_GetHashtagMessages")]
        public virtual IQueryable<DSC_RoomMessageToken> tvf_DSC_GetHashtagMessages(Nullable<long> hashtagId)
        {
            var hashtagIdParameter = hashtagId.HasValue ?
                new ObjectParameter("HashtagId", hashtagId) :
                new ObjectParameter("HashtagId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DSC_RoomMessageToken>("[lfeAuthorEntities].[tvf_DSC_GetHashtagMessages](@HashtagId)", hashtagIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DSC_GetMessageFeed")]
        public virtual IQueryable<DSC_RoomMessageToken> tvf_DSC_GetMessageFeed(Nullable<long> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DSC_RoomMessageToken>("[lfeAuthorEntities].[tvf_DSC_GetMessageFeed](@MessageId)", messageIdParameter);
        }
    
        public virtual ObjectResult<WIDGET_CourseListToken> spWidget_GetUserCourses(Nullable<short> currencyId, Nullable<int> userID, Nullable<int> pageID, string sort, string sortDirection, Nullable<int> pagesize)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(short));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("pageID", pageID) :
                new ObjectParameter("pageID", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WIDGET_CourseListToken>("spWidget_GetUserCourses", currencyIdParameter, userIDParameter, pageIDParameter, sortParameter, sortDirectionParameter, pagesizeParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetReviewToken4Author")]
        public virtual IQueryable<CRS_ReviewAuthorMessageToken> tvf_CRS_GetReviewToken4Author(Nullable<int> reviewId)
        {
            var reviewIdParameter = reviewId.HasValue ?
                new ObjectParameter("ReviewId", reviewId) :
                new ObjectParameter("ReviewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_ReviewAuthorMessageToken>("[lfeAuthorEntities].[tvf_CRS_GetReviewToken4Author](@ReviewId)", reviewIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetReviewToken4Learners")]
        public virtual IQueryable<CRS_ReviewLearnerMessageToken> tvf_CRS_GetReviewToken4Learners(Nullable<int> reviewId)
        {
            var reviewIdParameter = reviewId.HasValue ?
                new ObjectParameter("ReviewId", reviewId) :
                new ObjectParameter("ReviewId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_ReviewLearnerMessageToken>("[lfeAuthorEntities].[tvf_CRS_GetReviewToken4Learners](@ReviewId)", reviewIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_LOG_FileInterface")]
        public virtual IQueryable<LOG_FileInterfaceToken> tvf_LOG_FileInterface(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, string status)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LOG_FileInterfaceToken>("[lfeAuthorEntities].[tvf_LOG_FileInterface](@from, @to, @UserId, @Status)", fromParameter, toParameter, userIdParameter, statusParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_LOG_EmailInterface")]
        public virtual IQueryable<LOG_EmailInterfaceToken> tvf_LOG_EmailInterface(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, string status)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LOG_EmailInterfaceToken>("[lfeAuthorEntities].[tvf_LOG_EmailInterface](@from, @to, @UserId, @Status)", fromParameter, toParameter, userIdParameter, statusParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_LOG_FbPostInterface")]
        public virtual IQueryable<LOG_FbPostInterfaceToken> tvf_LOG_FbPostInterface(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, string status)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LOG_FbPostInterfaceToken>("[lfeAuthorEntities].[tvf_LOG_FbPostInterface](@from, @to, @UserId, @Status)", fromParameter, toParameter, userIdParameter, statusParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_GetAuthorNonIncludedCourses")]
        public virtual IQueryable<WS_NotIncludedCourseToken> tvf_WS_GetAuthorNonIncludedCourses(Nullable<int> storeId)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_NotIncludedCourseToken>("[lfeAuthorEntities].[tvf_WS_GetAuthorNonIncludedCourses](@StoreId)", storeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetCourseCategories")]
        public virtual IQueryable<Categories> tvf_CRS_GetCourseCategories(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Categories>("[lfeAuthorEntities].[tvf_CRS_GetCourseCategories](@CourseId)", courseIdParameter);
        }
    
        public virtual ObjectResult<WIDGET_CourseListToken> sp_Widget_GetAllCourses(Nullable<short> currencyId, Nullable<int> pageID, string sort, string sortDirection, Nullable<int> pagesize, Nullable<int> userID)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(short));
    
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("pageID", pageID) :
                new ObjectParameter("pageID", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WIDGET_CourseListToken>("sp_Widget_GetAllCourses", currencyIdParameter, pageIDParameter, sortParameter, sortDirectionParameter, pagesizeParameter, userIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetWebStores")]
        public virtual IQueryable<Nullable<int>> tvf_CRS_GetWebStores(Nullable<int> courseID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[lfeAuthorEntities].[tvf_CRS_GetWebStores](@CourseID)", courseIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetChaptersByUid")]
        public virtual IQueryable<CourseChapters> tvf_CRS_GetChaptersByUid(Nullable<System.Guid> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("Uid", uid) :
                new ObjectParameter("Uid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CourseChapters>("[lfeAuthorEntities].[tvf_CRS_GetChaptersByUid](@Uid)", uidParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetSubscribers")]
        public virtual IQueryable<CRS_LearnerToken> tvf_CRS_GetSubscribers(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_LearnerToken>("[lfeAuthorEntities].[tvf_CRS_GetSubscribers](@CourseId)", courseIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetAllSubscribers")]
        public virtual IQueryable<CRS_LearnerToken> tvf_USER_GetAllSubscribers(Nullable<int> authorId)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_LearnerToken>("[lfeAuthorEntities].[tvf_USER_GetAllSubscribers](@AuthorId)", authorIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetCourseContentCnt")]
        public virtual IQueryable<Nullable<short>> tvf_CRS_GetCourseContentCnt(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<short>>("[lfeAuthorEntities].[tvf_CRS_GetCourseContentCnt](@CourseId)", courseIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetCourseInfo")]
        public virtual IQueryable<CRS_CourseToken> tvf_CRS_GetCourseInfo(Nullable<short> currencyId, Nullable<int> courseId)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_CourseToken>("[lfeAuthorEntities].[tvf_CRS_GetCourseInfo](@CurrencyId, @CourseId)", currencyIdParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<WIDGET_CourseListToken> sp_WIDGET_SearchCourses(Nullable<short> currencyId, Nullable<int> pageID, string trackingID, Nullable<int> pagesize, string wixViewMode, Nullable<int> userID, string keyword)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(short));
    
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("pageID", pageID) :
                new ObjectParameter("pageID", typeof(int));
    
            var trackingIDParameter = trackingID != null ?
                new ObjectParameter("trackingID", trackingID) :
                new ObjectParameter("trackingID", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var wixViewModeParameter = wixViewMode != null ?
                new ObjectParameter("WixViewMode", wixViewMode) :
                new ObjectParameter("WixViewMode", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WIDGET_CourseListToken>("sp_WIDGET_SearchCourses", currencyIdParameter, pageIDParameter, trackingIDParameter, pagesizeParameter, wixViewModeParameter, userIDParameter, keywordParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetCourseInfoByUrlName")]
        public virtual IQueryable<CRS_CourseToken> tvf_CRS_GetCourseInfoByUrlName(Nullable<short> currencyId, string urlName)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var urlNameParameter = urlName != null ?
                new ObjectParameter("UrlName", urlName) :
                new ObjectParameter("UrlName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_CourseToken>("[lfeAuthorEntities].[tvf_CRS_GetCourseInfoByUrlName](@CurrencyId, @UrlName)", currencyIdParameter, urlNameParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetBillingAddresses")]
        public virtual IQueryable<USER_BillingAddressToken> tvf_USER_GetBillingAddresses(Nullable<int> userId, Nullable<int> addressId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_BillingAddressToken>("[lfeAuthorEntities].[tvf_USER_GetBillingAddresses](@UserId, @AddressId)", userIdParameter, addressIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_SALE_GetSellerSalesStatistic")]
        public virtual IQueryable<SALE_SalesStatisticToken> tvf_SALE_GetSellerSalesStatistic(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> authorId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SALE_SalesStatisticToken>("[lfeAuthorEntities].[tvf_SALE_GetSellerSalesStatistic](@from, @to, @AuthorId)", fromParameter, toParameter, authorIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_SALE_SearchTransactions")]
        public virtual IQueryable<vw_SALE_Transactions> tvf_SALE_SearchTransactions(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sellerUserId, Nullable<int> buyerUserId, Nullable<int> courseId, Nullable<int> bundleId, Nullable<int> trxTypeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var sellerUserIdParameter = sellerUserId.HasValue ?
                new ObjectParameter("SellerUserId", sellerUserId) :
                new ObjectParameter("SellerUserId", typeof(int));
    
            var buyerUserIdParameter = buyerUserId.HasValue ?
                new ObjectParameter("BuyerUserId", buyerUserId) :
                new ObjectParameter("BuyerUserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            var trxTypeIdParameter = trxTypeId.HasValue ?
                new ObjectParameter("TrxTypeId", trxTypeId) :
                new ObjectParameter("TrxTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<vw_SALE_Transactions>("[lfeAuthorEntities].[tvf_SALE_SearchTransactions](@from, @to, @SellerUserId, @BuyerUserId, @CourseId, @BundleId, @TrxTypeId)", fromParameter, toParameter, sellerUserIdParameter, buyerUserIdParameter, courseIdParameter, bundleIdParameter, trxTypeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_SALE_SearchOrderLines")]
        public virtual IQueryable<SALE_OrderLineViewToken> tvf_SALE_SearchOrderLines(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sellerUserId, Nullable<int> buyerUserId, Nullable<int> ownerUserId, Nullable<int> courseId, Nullable<int> bundleId, Nullable<int> storeId, Nullable<byte> lineTypeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var sellerUserIdParameter = sellerUserId.HasValue ?
                new ObjectParameter("SellerUserId", sellerUserId) :
                new ObjectParameter("SellerUserId", typeof(int));
    
            var buyerUserIdParameter = buyerUserId.HasValue ?
                new ObjectParameter("BuyerUserId", buyerUserId) :
                new ObjectParameter("BuyerUserId", typeof(int));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("OwnerUserId", ownerUserId) :
                new ObjectParameter("OwnerUserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var lineTypeIdParameter = lineTypeId.HasValue ?
                new ObjectParameter("LineTypeId", lineTypeId) :
                new ObjectParameter("LineTypeId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SALE_OrderLineViewToken>("[lfeAuthorEntities].[tvf_SALE_SearchOrderLines](@from, @to, @SellerUserId, @BuyerUserId, @OwnerUserId, @CourseId, @BundleId, @StoreId, @LineTypeId)", fromParameter, toParameter, sellerUserIdParameter, buyerUserIdParameter, ownerUserIdParameter, courseIdParameter, bundleIdParameter, storeIdParameter, lineTypeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetBundleCourses")]
        public virtual IQueryable<CRS_BundleCourseToken> tvf_CRS_GetBundleCourses(Nullable<int> bundleId)
        {
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_BundleCourseToken>("[lfeAuthorEntities].[tvf_CRS_GetBundleCourses](@BundleId)", bundleIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetBundlesCoupons")]
        public virtual IQueryable<CRS_CouponToken> tvf_CRS_GetBundlesCoupons(Nullable<int> bundleId)
        {
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_CouponToken>("[lfeAuthorEntities].[tvf_CRS_GetBundlesCoupons](@BundleId)", bundleIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetAvailableCourses4Bundle")]
        public virtual IQueryable<CRS_AvailableCourseToken> tvf_CRS_GetAvailableCourses4Bundle(Nullable<int> bundleId)
        {
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_AvailableCourseToken>("[lfeAuthorEntities].[tvf_CRS_GetAvailableCourses4Bundle](@BundleId)", bundleIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetCourseCoupons")]
        public virtual IQueryable<CRS_CouponToken> tvf_CRS_GetCourseCoupons(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_CouponToken>("[lfeAuthorEntities].[tvf_CRS_GetCourseCoupons](@CourseId)", courseIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CAT_GetCategoryItems")]
        public virtual IQueryable<SALE_BaseItemToken> tvf_CAT_GetCategoryItems(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SALE_BaseItemToken>("[lfeAuthorEntities].[tvf_CAT_GetCategoryItems](@CategoryID)", categoryIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetAuthorsCoupons")]
        public virtual IQueryable<CRS_CouponToken> tvf_CRS_GetAuthorsCoupons(Nullable<int> authorId)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_CouponToken>("[lfeAuthorEntities].[tvf_CRS_GetAuthorsCoupons](@AuthorId)", authorIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_GetUserAffiliateItems")]
        public virtual IQueryable<WS_AffiliateItemToken> tvf_WS_GetUserAffiliateItems(Nullable<short> currencyId, Nullable<int> userId)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_AffiliateItemToken>("[lfeAuthorEntities].[tvf_WS_GetUserAffiliateItems](@CurrencyId, @UserId)", currencyIdParameter, userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_GetUserAffiliateStoresLOV")]
        public virtual IQueryable<WS_BaseStoreToken> tvf_WS_GetUserAffiliateStoresLOV(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_BaseStoreToken>("[lfeAuthorEntities].[tvf_WS_GetUserAffiliateStoresLOV](@UserId)", userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_GetWixStores")]
        public virtual IQueryable<WS_WixStoreToken> tvf_WS_GetWixStores(Nullable<int> ownerId)
        {
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_WixStoreToken>("[lfeAuthorEntities].[tvf_WS_GetWixStores](@OwnerId)", ownerIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_SALE_SearchOrders")]
        public virtual IQueryable<vw_SALE_Orders> tvf_SALE_SearchOrders(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> sellerUserId, Nullable<int> buyerUserId, Nullable<int> courseId, Nullable<int> bundleId, Nullable<int> storeId, Nullable<bool> subscriptionsOnly, Nullable<byte> statusId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var sellerUserIdParameter = sellerUserId.HasValue ?
                new ObjectParameter("SellerUserId", sellerUserId) :
                new ObjectParameter("SellerUserId", typeof(int));
    
            var buyerUserIdParameter = buyerUserId.HasValue ?
                new ObjectParameter("BuyerUserId", buyerUserId) :
                new ObjectParameter("BuyerUserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var subscriptionsOnlyParameter = subscriptionsOnly.HasValue ?
                new ObjectParameter("SubscriptionsOnly", subscriptionsOnly) :
                new ObjectParameter("SubscriptionsOnly", typeof(bool));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<vw_SALE_Orders>("[lfeAuthorEntities].[tvf_SALE_SearchOrders](@from, @to, @SellerUserId, @BuyerUserId, @CourseId, @BundleId, @StoreId, @SubscriptionsOnly, @StatusId)", fromParameter, toParameter, sellerUserIdParameter, buyerUserIdParameter, courseIdParameter, bundleIdParameter, storeIdParameter, subscriptionsOnlyParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<ADMIN_SummaryReportToken> sp_ADMIN_GetSummaryReport(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string groupBy)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("groupBy", groupBy) :
                new ObjectParameter("groupBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMIN_SummaryReportToken>("sp_ADMIN_GetSummaryReport", fromParameter, toParameter, groupByParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetStatistic")]
        public virtual IQueryable<USER_StatisticToken> tvf_USER_GetStatistic(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_StatisticToken>("[lfeAuthorEntities].[tvf_USER_GetStatistic](@UserId)", userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_SearchUsers")]
        public virtual IQueryable<vw_USER_UserLogins> tvf_USER_SearchUsers(Nullable<int> userId, Nullable<int> typeId, Nullable<System.DateTime> registerFrom, Nullable<System.DateTime> registerTo, Nullable<System.DateTime> loginFrom, Nullable<System.DateTime> loginTo, Nullable<bool> isGRP, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var registerFromParameter = registerFrom.HasValue ?
                new ObjectParameter("RegisterFrom", registerFrom) :
                new ObjectParameter("RegisterFrom", typeof(System.DateTime));
    
            var registerToParameter = registerTo.HasValue ?
                new ObjectParameter("RegisterTo", registerTo) :
                new ObjectParameter("RegisterTo", typeof(System.DateTime));
    
            var loginFromParameter = loginFrom.HasValue ?
                new ObjectParameter("LoginFrom", loginFrom) :
                new ObjectParameter("LoginFrom", typeof(System.DateTime));
    
            var loginToParameter = loginTo.HasValue ?
                new ObjectParameter("LoginTo", loginTo) :
                new ObjectParameter("LoginTo", typeof(System.DateTime));
    
            var isGRPParameter = isGRP.HasValue ?
                new ObjectParameter("IsGRP", isGRP) :
                new ObjectParameter("IsGRP", typeof(bool));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<vw_USER_UserLogins>("[lfeAuthorEntities].[tvf_USER_SearchUsers](@UserId, @TypeId, @RegisterFrom, @RegisterTo, @LoginFrom, @LoginTo, @IsGRP, @RoleId)", userIdParameter, typeIdParameter, registerFromParameter, registerToParameter, loginFromParameter, loginToParameter, isGRPParameter, roleIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_WS_SearchItems")]
        public virtual IQueryable<WS_ItemsToken> tvf_WS_SearchItems(Nullable<short> currencyId, Nullable<byte> itemStatusId, Nullable<int> authorId, string itemName)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var itemStatusIdParameter = itemStatusId.HasValue ?
                new ObjectParameter("ItemStatusId", itemStatusId) :
                new ObjectParameter("ItemStatusId", typeof(byte));
    
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_ItemsToken>("[lfeAuthorEntities].[tvf_WS_SearchItems](@CurrencyId, @ItemStatusId, @AuthorId, @ItemName)", currencyIdParameter, itemStatusIdParameter, authorIdParameter, itemNameParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_SearchItems")]
        public virtual IQueryable<USER_ItemToken> tvf_USER_SearchItems(Nullable<short> currencyId, Nullable<int> authorID, Nullable<int> itemId, Nullable<byte> statusId)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var authorIDParameter = authorID.HasValue ?
                new ObjectParameter("AuthorID", authorID) :
                new ObjectParameter("AuthorID", typeof(int));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_ItemToken>("[lfeAuthorEntities].[tvf_USER_SearchItems](@CurrencyId, @AuthorID, @ItemId, @StatusId)", currencyIdParameter, authorIDParameter, itemIdParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<ADMIN_SaleSummaryToken> sp_ADMIN_GetSalesSummaryReport(Nullable<int> year, Nullable<int> month, Nullable<int> userId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMIN_SaleSummaryToken>("sp_ADMIN_GetSalesSummaryReport", yearParameter, monthParameter, userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetNotification")]
        public virtual IQueryable<USER_NotificationToken> tvf_USER_GetNotification(Nullable<int> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_NotificationToken>("[lfeAuthorEntities].[tvf_USER_GetNotification](@MessageId)", messageIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetDailyAuthorLogins")]
        public virtual IQueryable<vw_USER_UserLogins> tvf_FACT_GetDailyAuthorLogins(Nullable<System.DateTime> loginDate)
        {
            var loginDateParameter = loginDate.HasValue ?
                new ObjectParameter("LoginDate", loginDate) :
                new ObjectParameter("LoginDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<vw_USER_UserLogins>("[lfeAuthorEntities].[tvf_FACT_GetDailyAuthorLogins](@LoginDate)", loginDateParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetDailyUserLogins")]
        public virtual IQueryable<vw_USER_UserLogins> tvf_FACT_GetDailyUserLogins(Nullable<System.DateTime> loginDate, Nullable<bool> returned)
        {
            var loginDateParameter = loginDate.HasValue ?
                new ObjectParameter("LoginDate", loginDate) :
                new ObjectParameter("LoginDate", typeof(System.DateTime));
    
            var returnedParameter = returned.HasValue ?
                new ObjectParameter("Returned", returned) :
                new ObjectParameter("Returned", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<vw_USER_UserLogins>("[lfeAuthorEntities].[tvf_FACT_GetDailyUserLogins](@LoginDate, @Returned)", loginDateParameter, returnedParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetDailyItemsStats")]
        public virtual IQueryable<USER_ItemToken> tvf_FACT_GetDailyItemsStats(Nullable<short> currencyId, Nullable<System.DateTime> eventDate, Nullable<bool> published)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("EventDate", eventDate) :
                new ObjectParameter("EventDate", typeof(System.DateTime));
    
            var publishedParameter = published.HasValue ?
                new ObjectParameter("Published", published) :
                new ObjectParameter("Published", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_ItemToken>("[lfeAuthorEntities].[tvf_FACT_GetDailyItemsStats](@CurrencyId, @EventDate, @Published)", currencyIdParameter, eventDateParameter, publishedParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetDailySotreStats")]
        public virtual IQueryable<WS_WixStoreToken> tvf_FACT_GetDailySotreStats(Nullable<System.DateTime> eventDate, Nullable<bool> wixOnly)
        {
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("EventDate", eventDate) :
                new ObjectParameter("EventDate", typeof(System.DateTime));
    
            var wixOnlyParameter = wixOnly.HasValue ?
                new ObjectParameter("WixOnly", wixOnly) :
                new ObjectParameter("WixOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WS_WixStoreToken>("[lfeAuthorEntities].[tvf_FACT_GetDailySotreStats](@EventDate, @WixOnly)", eventDateParameter, wixOnlyParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_FindCourseByUrlName")]
        public virtual IQueryable<Courses> tvf_CRS_FindCourseByUrlName(string courseUrlName, string authorUrlName)
        {
            var courseUrlNameParameter = courseUrlName != null ?
                new ObjectParameter("CourseUrlName", courseUrlName) :
                new ObjectParameter("CourseUrlName", typeof(string));
    
            var authorUrlNameParameter = authorUrlName != null ?
                new ObjectParameter("AuthorUrlName", authorUrlName) :
                new ObjectParameter("AuthorUrlName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Courses>("[lfeAuthorEntities].[tvf_CRS_FindCourseByUrlName](@CourseUrlName, @AuthorUrlName)", courseUrlNameParameter, authorUrlNameParameter);
        }
    
        public virtual ObjectResult<ADMIN_VideoStatsToken> sp_ADMIN_GetVideoStats(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMIN_VideoStatsToken>("sp_ADMIN_GetVideoStats", fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_SearchVideos")]
        public virtual IQueryable<USER_VideoInfoToken> tvf_USER_SearchVideos(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<bool> attachedOnly)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var attachedOnlyParameter = attachedOnly.HasValue ?
                new ObjectParameter("AttachedOnly", attachedOnly) :
                new ObjectParameter("AttachedOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_VideoInfoToken>("[lfeAuthorEntities].[tvf_USER_SearchVideos](@from, @to, @UserId, @AttachedOnly)", fromParameter, toParameter, userIdParameter, attachedOnlyParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetMonthlyStatementRefunds")]
        public virtual IQueryable<USER_MonthlyStatementToken> tvf_USER_GetMonthlyStatementRefunds(Nullable<int> year, Nullable<int> month, Nullable<int> userId, Nullable<short> currencyId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_MonthlyStatementToken>("[lfeAuthorEntities].[tvf_USER_GetMonthlyStatementRefunds](@Year, @Month, @UserId, @CurrencyId)", yearParameter, monthParameter, userIdParameter, currencyIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetMonthlyStatementSales")]
        public virtual IQueryable<USER_MonthlyStatementToken> tvf_USER_GetMonthlyStatementSales(Nullable<int> year, Nullable<int> month, Nullable<int> userId, Nullable<short> currencyId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<USER_MonthlyStatementToken>("[lfeAuthorEntities].[tvf_USER_GetMonthlyStatementSales](@Year, @Month, @UserId, @CurrencyId)", yearParameter, monthParameter, userIdParameter, currencyIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CRS_GetBundleInfo")]
        public virtual IQueryable<CRS_BundleInfoToken> tvf_CRS_GetBundleInfo(Nullable<short> currencyId, Nullable<int> bundleId)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CRS_BundleInfoToken>("[lfeAuthorEntities].[tvf_CRS_GetBundleInfo](@CurrencyId, @BundleId)", currencyIdParameter, bundleIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_SALE_GetLineCurrencyISO")]
        public virtual IQueryable<string> tvf_SALE_GetLineCurrencyISO(Nullable<int> lineId)
        {
            var lineIdParameter = lineId.HasValue ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[lfeAuthorEntities].[tvf_SALE_GetLineCurrencyISO](@LineId)", lineIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CAT_GetCategories")]
        public virtual IQueryable<CAT_CategoryToken> tvf_CAT_GetCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CAT_CategoryToken>("[lfeAuthorEntities].[tvf_CAT_GetCategories]()");
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CHIMP_GetMissingSegments")]
        public virtual IQueryable<CHIMP_MissingSegmentToken> tvf_CHIMP_GetMissingSegments(Nullable<int> userId, Nullable<int> listId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var listIdParameter = listId.HasValue ?
                new ObjectParameter("listId", listId) :
                new ObjectParameter("listId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CHIMP_MissingSegmentToken>("[lfeAuthorEntities].[tvf_CHIMP_GetMissingSegments](@userId, @listId)", userIdParameter, listIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CHIMP_GetItemSubscribers")]
        public virtual IQueryable<CHIMP_ItemSubscribers> tvf_CHIMP_GetItemSubscribers(Nullable<int> itemId, Nullable<int> itemType)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var itemTypeParameter = itemType.HasValue ?
                new ObjectParameter("itemType", itemType) :
                new ObjectParameter("itemType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CHIMP_ItemSubscribers>("[lfeAuthorEntities].[tvf_CHIMP_GetItemSubscribers](@itemId, @itemType)", itemIdParameter, itemTypeParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_CHIMP_GetAuthorSubscribers")]
        public virtual IQueryable<CHIMP_ItemSubscribers> tvf_CHIMP_GetAuthorSubscribers(Nullable<int> authorId)
        {
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("authorId", authorId) :
                new ObjectParameter("authorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CHIMP_ItemSubscribers>("[lfeAuthorEntities].[tvf_CHIMP_GetAuthorSubscribers](@authorId)", authorIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetEventsDailyStats")]
        public virtual IQueryable<FACT_EventsDailyStatsToken> tvf_FACT_GetEventsDailyStats(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<int> courseId, Nullable<int> bundleId, Nullable<int> storeId, Nullable<short> eventTypeID)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var bundleIdParameter = bundleId.HasValue ?
                new ObjectParameter("BundleId", bundleId) :
                new ObjectParameter("BundleId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var eventTypeIDParameter = eventTypeID.HasValue ?
                new ObjectParameter("EventTypeID", eventTypeID) :
                new ObjectParameter("EventTypeID", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_EventsDailyStatsToken>("[lfeAuthorEntities].[tvf_FACT_GetEventsDailyStats](@from, @to, @UserId, @CourseId, @BundleId, @StoreId, @EventTypeID)", fromParameter, toParameter, userIdParameter, courseIdParameter, bundleIdParameter, storeIdParameter, eventTypeIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetOwnerEventsDailyStats")]
        public virtual IQueryable<FACT_OwnerEventDailyStatsToken> tvf_FACT_GetOwnerEventsDailyStats(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_OwnerEventDailyStatsToken>("[lfeAuthorEntities].[tvf_FACT_GetOwnerEventsDailyStats](@from, @to)", fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_USER_GetUser")]
        public virtual IQueryable<vw_USER_UsersLib> tvf_USER_GetUser(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<vw_USER_UsersLib>("[lfeAuthorEntities].[tvf_USER_GetUser](@Email)", emailParameter);
        }
    
        public virtual int sp_ADMIN_DeleteUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ADMIN_DeleteUser", userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_APP_PluginsInstallationsRep")]
        public virtual IQueryable<APP_PluginsInstallationsRep> tvf_APP_PluginsInstallationsRep(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> typeId, Nullable<int> userId, Nullable<bool> isactive)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<APP_PluginsInstallationsRep>("[lfeAuthorEntities].[tvf_APP_PluginsInstallationsRep](@from, @to, @typeId, @userId, @isactive)", fromParameter, toParameter, typeIdParameter, userIdParameter, isactiveParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_ADMIN_GetSystemLogs")]
        public virtual IQueryable<ADMIN_SystemLogToken> tvf_ADMIN_GetSystemLogs(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string module, string level, Nullable<int> userId, Nullable<long> sessionId, string ipAddress)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(long));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ADMIN_SystemLogToken>("[lfeAuthorEntities].[tvf_ADMIN_GetSystemLogs](@from, @to, @Module, @Level, @UserId, @SessionId, @IpAddress)", fromParameter, toParameter, moduleParameter, levelParameter, userIdParameter, sessionIdParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<PO_MonthlyPayoutToken> sp_PO_GetMonthlyPayoutReport(Nullable<int> year, Nullable<int> month, Nullable<int> lfeCommission, Nullable<int> userId, Nullable<short> currencyId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var lfeCommissionParameter = lfeCommission.HasValue ?
                new ObjectParameter("LfeCommission", lfeCommission) :
                new ObjectParameter("LfeCommission", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PO_MonthlyPayoutToken>("sp_PO_GetMonthlyPayoutReport", yearParameter, monthParameter, lfeCommissionParameter, userIdParameter, currencyIdParameter);
        }
    
        public virtual int sp_PO_SaveMonthlyPayoutStatment(Nullable<int> year, Nullable<int> month, Nullable<int> lfeCommission, Nullable<int> creatorId)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var lfeCommissionParameter = lfeCommission.HasValue ?
                new ObjectParameter("LfeCommission", lfeCommission) :
                new ObjectParameter("LfeCommission", typeof(int));
    
            var creatorIdParameter = creatorId.HasValue ?
                new ObjectParameter("CreatorId", creatorId) :
                new ObjectParameter("CreatorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PO_SaveMonthlyPayoutStatment", yearParameter, monthParameter, lfeCommissionParameter, creatorIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_PO_GetPayoutExecutions")]
        public virtual IQueryable<PO_PayoutExecutionToken> tvf_PO_GetPayoutExecutions(Nullable<int> executionId)
        {
            var executionIdParameter = executionId.HasValue ?
                new ObjectParameter("ExecutionId", executionId) :
                new ObjectParameter("ExecutionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PO_PayoutExecutionToken>("[lfeAuthorEntities].[tvf_PO_GetPayoutExecutions](@ExecutionId)", executionIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_PO_GetPayoutStatments")]
        public virtual IQueryable<PO_PayoutStatmentToken> tvf_PO_GetPayoutStatments(Nullable<int> executionId)
        {
            var executionIdParameter = executionId.HasValue ?
                new ObjectParameter("ExecutionId", executionId) :
                new ObjectParameter("ExecutionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PO_PayoutStatmentToken>("[lfeAuthorEntities].[tvf_PO_GetPayoutStatments](@ExecutionId)", executionIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DB_GetAuthorEventStats")]
        public virtual IQueryable<DB_AuthorEventStatsToken> tvf_DB_GetAuthorEventStats(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DB_AuthorEventStatsToken>("[lfeAuthorEntities].[tvf_DB_GetAuthorEventStats](@UserId)", userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DB_GetAuthorSalesStats")]
        public virtual IQueryable<DB_AuthorSalesStatsToken> tvf_DB_GetAuthorSalesStats(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<short> currencyId, Nullable<int> storeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DB_AuthorSalesStatsToken>("[lfeAuthorEntities].[tvf_DB_GetAuthorSalesStats](@From, @To, @UserId, @CurrencyId, @StoreId)", fromParameter, toParameter, userIdParameter, currencyIdParameter, storeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetEventsDailyAggregates")]
        public virtual IQueryable<FACT_EventsDailyStatsToken> tvf_FACT_GetEventsDailyAggregates(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> authorId, Nullable<int> storeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_EventsDailyStatsToken>("[lfeAuthorEntities].[tvf_FACT_GetEventsDailyAggregates](@from, @to, @AuthorId, @StoreId)", fromParameter, toParameter, authorIdParameter, storeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DB_GetAuthorPeriodCurrenciesLOV")]
        public virtual IQueryable<BASE_CurrencyToken> tvf_DB_GetAuthorPeriodCurrenciesLOV(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BASE_CurrencyToken>("[lfeAuthorEntities].[tvf_DB_GetAuthorPeriodCurrenciesLOV](@From, @To, @UserId)", fromParameter, toParameter, userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DB_GetUserSalesDetails")]
        public virtual IQueryable<DB_SaleDetailsToken> tvf_DB_GetUserSalesDetails(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<short> currencyId, Nullable<int> storeId, string paymentSource, Nullable<byte> lineTypeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var paymentSourceParameter = paymentSource != null ?
                new ObjectParameter("PaymentSource", paymentSource) :
                new ObjectParameter("PaymentSource", typeof(string));
    
            var lineTypeIdParameter = lineTypeId.HasValue ?
                new ObjectParameter("LineTypeId", lineTypeId) :
                new ObjectParameter("LineTypeId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DB_SaleDetailsToken>("[lfeAuthorEntities].[tvf_DB_GetUserSalesDetails](@From, @To, @UserId, @CurrencyId, @StoreId, @PaymentSource, @LineTypeId)", fromParameter, toParameter, userIdParameter, currencyIdParameter, storeIdParameter, paymentSourceParameter, lineTypeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DB_GetUserSubscriptionsCancelDetails")]
        public virtual IQueryable<DB_SubscriptionCancelToken> tvf_DB_GetUserSubscriptionsCancelDetails(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<short> currencyId, Nullable<int> storeId, string paymentSource, Nullable<byte> lineTypeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var paymentSourceParameter = paymentSource != null ?
                new ObjectParameter("PaymentSource", paymentSource) :
                new ObjectParameter("PaymentSource", typeof(string));
    
            var lineTypeIdParameter = lineTypeId.HasValue ?
                new ObjectParameter("LineTypeId", lineTypeId) :
                new ObjectParameter("LineTypeId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DB_SubscriptionCancelToken>("[lfeAuthorEntities].[tvf_DB_GetUserSubscriptionsCancelDetails](@From, @To, @UserId, @CurrencyId, @StoreId, @PaymentSource, @LineTypeId)", fromParameter, toParameter, userIdParameter, currencyIdParameter, storeIdParameter, paymentSourceParameter, lineTypeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DB_GetUserRefundDetails")]
        public virtual IQueryable<DB_RefundDetailToken> tvf_DB_GetUserRefundDetails(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<short> currencyId, Nullable<int> storeId, string paymentSource, Nullable<byte> lineTypeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var paymentSourceParameter = paymentSource != null ?
                new ObjectParameter("PaymentSource", paymentSource) :
                new ObjectParameter("PaymentSource", typeof(string));
    
            var lineTypeIdParameter = lineTypeId.HasValue ?
                new ObjectParameter("LineTypeId", lineTypeId) :
                new ObjectParameter("LineTypeId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DB_RefundDetailToken>("[lfeAuthorEntities].[tvf_DB_GetUserRefundDetails](@From, @To, @UserId, @CurrencyId, @StoreId, @PaymentSource, @LineTypeId)", fromParameter, toParameter, userIdParameter, currencyIdParameter, storeIdParameter, paymentSourceParameter, lineTypeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_DB_GetUserCouponUsageDetails")]
        public virtual IQueryable<DB_CouponUsageToken> tvf_DB_GetUserCouponUsageDetails(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> userId, Nullable<short> currencyId, Nullable<int> storeId, string paymentSource, Nullable<byte> lineTypeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var paymentSourceParameter = paymentSource != null ?
                new ObjectParameter("PaymentSource", paymentSource) :
                new ObjectParameter("PaymentSource", typeof(string));
    
            var lineTypeIdParameter = lineTypeId.HasValue ?
                new ObjectParameter("LineTypeId", lineTypeId) :
                new ObjectParameter("LineTypeId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DB_CouponUsageToken>("[lfeAuthorEntities].[tvf_DB_GetUserCouponUsageDetails](@From, @To, @UserId, @CurrencyId, @StoreId, @PaymentSource, @LineTypeId)", fromParameter, toParameter, userIdParameter, currencyIdParameter, storeIdParameter, paymentSourceParameter, lineTypeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetHostEvents")]
        public virtual IQueryable<FACT_HostEventToken> tvf_FACT_GetHostEvents(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string groupBy, string host)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("groupBy", groupBy) :
                new ObjectParameter("groupBy", typeof(string));
    
            var hostParameter = host != null ?
                new ObjectParameter("host", host) :
                new ObjectParameter("host", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_HostEventToken>("[lfeAuthorEntities].[tvf_FACT_GetHostEvents](@from, @to, @groupBy, @host)", fromParameter, toParameter, groupByParameter, hostParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetEventsDailyLiveAggregates")]
        public virtual IQueryable<FACT_EventsDailyStatsToken> tvf_FACT_GetEventsDailyLiveAggregates(Nullable<System.DateTime> from, Nullable<System.DateTime> to, Nullable<int> authorId, Nullable<int> storeId)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_EventsDailyStatsToken>("[lfeAuthorEntities].[tvf_FACT_GetEventsDailyLiveAggregates](@from, @to, @AuthorId, @StoreId)", fromParameter, toParameter, authorIdParameter, storeIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetPlatformStats")]
        public virtual IQueryable<FACT_DASH_PlatformStats> tvf_FACT_DASH_GetPlatformStats(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_PlatformStats>("[lfeAuthorEntities].[tvf_FACT_DASH_GetPlatformStats](@from, @to)", fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetTotals")]
        public virtual IQueryable<FACT_DASH_TotalsToken> tvf_FACT_DASH_GetTotals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_TotalsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetTotals]()");
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetNewPeriodTotals")]
        public virtual IQueryable<FACT_DASH_NewPeriodTotalsToken> tvf_FACT_DASH_GetNewPeriodTotals(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_NewPeriodTotalsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetNewPeriodTotals](@from, @to)", fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetPeriodSalesTotals")]
        public virtual IQueryable<FACT_DASH_PeriodSalesTotalsToken> tvf_FACT_DASH_GetPeriodSalesTotals(Nullable<short> currencyId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_PeriodSalesTotalsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetPeriodSalesTotals](@CurrencyId, @From, @To)", currencyIdParameter, fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetPeriodSalesStats")]
        public virtual IQueryable<FACT_DASH_PeriodSalesStatsToken> tvf_FACT_DASH_GetPeriodSalesStats(Nullable<short> currencyId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_PeriodSalesStatsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetPeriodSalesStats](@CurrencyId, @From, @To)", currencyIdParameter, fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetAuthorTotalStats")]
        public virtual IQueryable<FACT_DASH_AuthorTotalStatsToken> tvf_FACT_DASH_GetAuthorTotalStats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_AuthorTotalStatsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetAuthorTotalStats]()");
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetAuthorPeriodStats")]
        public virtual IQueryable<FACT_DASH_AuthorPeriodStatsToken> tvf_FACT_DASH_GetAuthorPeriodStats(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_AuthorPeriodStatsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetAuthorPeriodStats](@From, @To)", fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetLearnerPeriodStats")]
        public virtual IQueryable<FACT_DASH_LearnerPeriodStatsToken> tvf_FACT_DASH_GetLearnerPeriodStats(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_LearnerPeriodStatsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetLearnerPeriodStats](@From, @To)", fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_DASH_GetLearnerPeriodCouponStats")]
        public virtual IQueryable<FACT_DASH_LearnerPeriodCouponStatsToken> tvf_FACT_DASH_GetLearnerPeriodCouponStats(Nullable<short> currencyId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(short));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_DASH_LearnerPeriodCouponStatsToken>("[lfeAuthorEntities].[tvf_FACT_DASH_GetLearnerPeriodCouponStats](@CurrencyId, @From, @To)", currencyIdParameter, fromParameter, toParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_QZ_GetCourseQuizzes")]
        public virtual IQueryable<QZ_CourseQuizToken> tvf_QZ_GetCourseQuizzes(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QZ_CourseQuizToken>("[lfeAuthorEntities].[tvf_QZ_GetCourseQuizzes](@CourseId)", courseIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_QZ_GetUserCourseQuizzes")]
        public virtual IQueryable<QZ_UserCourseQuizToken> tvf_QZ_GetUserCourseQuizzes(Nullable<int> userId, Nullable<int> courseId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QZ_UserCourseQuizToken>("[lfeAuthorEntities].[tvf_QZ_GetUserCourseQuizzes](@UserId, @CourseId)", userIdParameter, courseIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_QZ_GetAttemptQuestionAnswerOptions")]
        public virtual IQueryable<QZ_AttemptAnswerOptionToken> tvf_QZ_GetAttemptQuestionAnswerOptions(Nullable<int> questId, Nullable<System.Guid> attemptID)
        {
            var questIdParameter = questId.HasValue ?
                new ObjectParameter("QuestId", questId) :
                new ObjectParameter("QuestId", typeof(int));
    
            var attemptIDParameter = attemptID.HasValue ?
                new ObjectParameter("AttemptID", attemptID) :
                new ObjectParameter("AttemptID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QZ_AttemptAnswerOptionToken>("[lfeAuthorEntities].[tvf_QZ_GetAttemptQuestionAnswerOptions](@QuestId, @AttemptID)", questIdParameter, attemptIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_QZ_GetStudentAttempt")]
        public virtual IQueryable<QZ_StudentAttemptToken> tvf_QZ_GetStudentAttempt(Nullable<System.Guid> attemptID)
        {
            var attemptIDParameter = attemptID.HasValue ?
                new ObjectParameter("AttemptID", attemptID) :
                new ObjectParameter("AttemptID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QZ_StudentAttemptToken>("[lfeAuthorEntities].[tvf_QZ_GetStudentAttempt](@AttemptID)", attemptIDParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_QZ_GetStudentBestAttempt")]
        public virtual IQueryable<QZ_StudentAttemptToken> tvf_QZ_GetStudentBestAttempt(Nullable<System.Guid> quizId, Nullable<int> userId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("QuizId", quizId) :
                new ObjectParameter("QuizId", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QZ_StudentAttemptToken>("[lfeAuthorEntities].[tvf_QZ_GetStudentBestAttempt](@QuizId, @UserId)", quizIdParameter, userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_QZ_GetStudentQuizInfo")]
        public virtual IQueryable<QZ_StudentQuizInfoToken> tvf_QZ_GetStudentQuizInfo(Nullable<System.Guid> quizId, Nullable<System.Guid> studentQuizId, Nullable<int> userId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("QuizId", quizId) :
                new ObjectParameter("QuizId", typeof(System.Guid));
    
            var studentQuizIdParameter = studentQuizId.HasValue ?
                new ObjectParameter("StudentQuizId", studentQuizId) :
                new ObjectParameter("StudentQuizId", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QZ_StudentQuizInfoToken>("[lfeAuthorEntities].[tvf_QZ_GetStudentQuizInfo](@QuizId, @StudentQuizId, @UserId)", quizIdParameter, studentQuizIdParameter, userIdParameter);
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_ADMIN_GetUnusedVideos")]
        public virtual IQueryable<Nullable<long>> tvf_ADMIN_GetUnusedVideos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<long>>("[lfeAuthorEntities].[tvf_ADMIN_GetUnusedVideos]()");
        }
    
        [DbFunction("lfeAuthorEntities", "tvf_FACT_GetAbandonHosts")]
        public virtual IQueryable<FACT_AbandonHostToken> tvf_FACT_GetAbandonHosts(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> lastEventDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var lastEventDateParameter = lastEventDate.HasValue ?
                new ObjectParameter("LastEventDate", lastEventDate) :
                new ObjectParameter("LastEventDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FACT_AbandonHostToken>("[lfeAuthorEntities].[tvf_FACT_GetAbandonHosts](@FromDate, @LastEventDate)", fromDateParameter, lastEventDateParameter);
        }
    
        public virtual ObjectResult<WIDGET_CourseListToken> spWidget_GetStoreCourses(Nullable<short> currencyId, Nullable<int> categoryID, Nullable<int> pageID, string trackingID, Nullable<int> pagesize, string wixViewMode, Nullable<int> userID)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(short));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var pageIDParameter = pageID.HasValue ?
                new ObjectParameter("pageID", pageID) :
                new ObjectParameter("pageID", typeof(int));
    
            var trackingIDParameter = trackingID != null ?
                new ObjectParameter("trackingID", trackingID) :
                new ObjectParameter("trackingID", typeof(string));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            var wixViewModeParameter = wixViewMode != null ?
                new ObjectParameter("WixViewMode", wixViewMode) :
                new ObjectParameter("WixViewMode", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WIDGET_CourseListToken>("spWidget_GetStoreCourses", currencyIdParameter, categoryIDParameter, pageIDParameter, trackingIDParameter, pagesizeParameter, wixViewModeParameter, userIDParameter);
        }
    
        public virtual ObjectResult<sp_USER_GetVideosState_Result> sp_USER_GetVideosState(Nullable<int> oldMont, Nullable<bool> excludeSales)
        {
            var oldMontParameter = oldMont.HasValue ?
                new ObjectParameter("OldMont", oldMont) :
                new ObjectParameter("OldMont", typeof(int));
    
            var excludeSalesParameter = excludeSales.HasValue ?
                new ObjectParameter("ExcludeSales", excludeSales) :
                new ObjectParameter("ExcludeSales", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_USER_GetVideosState_Result>("sp_USER_GetVideosState", oldMontParameter, excludeSalesParameter);
        }
    }
}
