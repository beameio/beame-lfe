@using LFE.Portal.Areas.UserPortal.Helpers
@model LFE.Portal.Areas.UserPortal.Models.CourseViewerPageToken
<style type="text/css" scoped="scoped">.timer { font-size: 13px;color: red }</style>
     
<script src="@Url.Content("~/Areas/UserPortal/Scripts/plugins/countdown.min.js")" type="text/javascript"></script>
      
<script>

	var HASHTAG_FEED_URL = '@Url.Action("GetHashFeedTreePartial", "Discussion", new { area = "UserPortal" })';
	var OPEN_FEED_WINDOW = true;
	var CURRENT_COURSE_ID = '@Model.CourseId';

	var bcLfePlayer;

	$(document).ready(function() {
		window.getNotifManagerInstance().unsubscribe(notifEvents.video.videoSelected, onVideoSelected, null);
		window.getNotifManagerInstance().subscribe(notifEvents.video.videoSelected, onVideoSelected, null);

		window.getNotifManagerInstance().unsubscribe(notifEvents.course.saveState, saveCoursState, null);
		window.getNotifManagerInstance().subscribe(notifEvents.course.saveState, saveCoursState, null);


		window.CURRENT_VIDEO_TOKEN = null;
		window.VIDEO_NAV_ARRAY = $.parseJSON('@(Html.ToJson(Model.CourseViewerDTO.VideosNavigation))');

		onCoursePageLoad('@Model.CourseViewerDTO.LastVideoId');

		adjuctContentH();

		$(window).resize(function () {
			adjuctContentH();
		});

	});

	function getBcPlayerInstance() {
		if (bcLfePlayer == undefined || bcLfePlayer == null) {

			var data = {
				containerSelector: '#bc-player-container',
				videosList :window.VIDEO_NAV_ARRAY,
				isAutoPlay:true,
				playerW : 600,
				playerH :338
			};

			bcLfePlayer = new BclPlayer(data);
		}
		return bcLfePlayer;
	}

	function saveCoursState(video) {

		var data = {
			courseId: '@Model.CourseId'
			,chapterId: video.chapterId
			,videoId: video.videoId
			,bcId:video.bcId
		};

		$.ajax({
			url: '@Url.Action("SaveLearnerCourseState", "Course")',
			cache: false,
			type: "Post",
			data: JSON.stringify(data),
			datatype: "json",
			contentType: "application/json; charset=utf-8"
		});
	}

	function adjuctContentH() {
		var h = $(window).height();
		var newH = h - 212; //header=39+3 , course header=120+30, footer=10, padding-bottom=10 ==> 39+3+120+30+10+10 = 212px
		$(CONTENT_CONTAINER_SELECTOR).height(newH);
		window.getNotifManagerInstance().notify(notifEvents.window.windowResized, newH);
	}

	//addede by Idan, handle facebook watch story 
	function PublishFacebookStory(video) {
	    var isPostStory = readCookie("lfe_FacebookStory");

	    if (isPostStory == '1') {
	        return;
	    }

	    $("#msgFacebookStory").toggle();
	    $("#msgFacebookOff").toggle();

	    var data = {
	        courseId: '@Model.CourseId'
			, chapterId: video.chapterId
			, videoId: video.videoId
			, bcId: video.bcId
	    };

	    $.ajax({
	        url: '@Url.Action("PublishUserViewStory", "Course",new{area="UserPortal"})',
	        cache: false,
	        type: "Post",
	        data: JSON.stringify(data),
	        datatype: "json",
	        contentType: "application/json; charset=utf-8"
	    });


	}
	var turnOff = "Turn Off";
	var turnOn = "Turn On";
	function CloseFacebookMessage() {
	    $("#msgFacebookStory").toggle();
	    $("#msgFacebookOff").toggle();
	}

	function SetFacebookCoockie() {
	    var isPostStory = readCookie("lfe_FacebookStory");

	    if (isPostStory == '1') {
	        isPostStory = '0';
	        UpdateFaceboockSwitchTitle(turnOff);
	    }
	    else {
	        isPostStory = '1';
	        UpdateFaceboockSwitchTitle(turnOn);
	    }

	    createCookie("lfe_FacebookStory", isPostStory, 1000);
	}

	$(document).ready(function () {
	    var isPostStory = readCookie("lfe_FacebookStory");

	    if (isPostStory == '1') {
	        UpdateFaceboockSwitchTitle(turnOn);
	    }
	    else {
	        UpdateFaceboockSwitchTitle(turnOff);
	    }
	});

	function UpdateFaceboockSwitchTitle(text) {
	    $("#aFacebookSwitch2").text(text);
	    $("#aFacebookSwitch2").text(text);
	}

	function readCookie(name) {
	    var nameEQ = escape(name) + "=";
	    var ca = document.cookie.split(';');
	    for (var i = 0; i < ca.length; i++) {
	        var c = ca[i];
	        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
	        if (c.indexOf(nameEQ) === 0) return unescape(c.substring(nameEQ.length, c.length));
	    }
	    return null;
	}

	function createCookie(name, value, days) {
	    var expires;

	    if (days) {
	        var date = new Date();
	        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
	        expires = "; expires=" + date.toGMTString();
	    } else {
	        expires = "";
	    }

	    document.cookie = escape(name) + "=" + escape(value) + expires + "; path=/";
	}
</script>

<div class="cv-header">
    @Html.Partial("CourseViewer/_CourseHeader", Model.CourseViewerDTO)
</div>

@{
    if (Model.ItemState.ValidUntill != null)
    {
        <span id="countdown" class="timer"></span>
        <script>
            var seconds = 60;
            var rentalTimer = new Countdown({
                selector: '#countdown',                                
                msgPattern: "{days} days, {hours} hours , {minutes} minutes and {seconds} seconds  elapsed",
                msgAfter:"Your rental period finished",
                leadingZeros: "0",
                dateStart: new Date('@DateTime.Now.ToString()'),
                dateEnd: new Date('@Model.ItemState.ValidUntill.ToString()'),
                onEnd:onRentalEnd
            });
          

        function onRentalEnd() {
            ajaxAction('@Url.Action("OnRentalFinished","Course",new {area="UserPortal"})',{id:'@Model.CourseId'},finishRentalCallback);
        }

        function finishRentalCallback(response) {
            if (response.success) {
                alert('You rental period finished');
                location.reload();
            } else {
                console.log(response.error);
                location.reload();
            }
        }
        </script>
    }
}

<div class="cv-content">
    <div class="col left-col">
        <div class="inner">
            @Html.Partial("CourseViewer/_ChaptersTree", Model.CourseViewerDTO.Chapters)
        </div>
    </div>
    <div class="col right-col">
        <div class="inner">
            <div id="msgFacebookStory" style="display:none;background-color: #f5f8f9; border:1px solid gray; height:100px; padding-top:10px">
                <div style="float:right;  padding-right:5px"><a style="border:1px solid gray;background-color: gray; color: black; font-weight: bold;" href="javascript:CloseFacebookMessage()">X</a></div>
                <div style="float:left; display:inline-block;width:100px; padding-left:20px;padding-right:20px">
                    <img src="https://fbcdn-photos-f-a.akamaihd.net/hphotos-ak-prn1/t39.2080-0/851583_575133769260286_929435999_n.png" alt=""/>
                </div>
                <div style="float:left;display:inline-block;padding-left:20px">
                    <strong>Tell your friends about this course!</strong>
                    <br />
                    Lfe is posting on facebook that you have watched this chapter
                    <br />
                    <br />
                    <a id="aFacebookSwitch" href="javascript:SetFacebookCoockie();" style="text-decoration:underline; cursor:pointer">Turn Off</a> facebook watch story notification

                </div>
            </div>
            <div id="msgFacebookOff" style=";background-color: #f5f8f9; border:1px solid gray; height:30px; padding-top:5px">
                <div style="float:left; display:inline-block;width:100px; padding-left:20px;">
                    <img src="~/Areas/Widget/Content/images/facebook-Small-icon.png" width="25" height="25" alt="" />
                </div>
                <div style="float:left;display:inline-block">
                    <a id="aFacebookSwitch2" href="javascript:SetFacebookCoockie();" style="text-decoration:underline; cursor:pointer">Turn Off</a> facebook watch story notification
                </div>
            </div>
            @Html.Partial("CourseViewer/_CourseNavigation", Model.CourseViewerDTO)

            <div class="c-tabs-content" id="c-tabs-content">
                <div id="d-tab-content" style=""></div>
            </div>
        </div>

    </div>
</div>