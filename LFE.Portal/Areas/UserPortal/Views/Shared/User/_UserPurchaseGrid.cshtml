@using Kendo.Mvc.UI
@using LFE.DataTokens

<script>
    function onPurchaseRepRequestEnd(e) {
        try {
            if (e.type != 'read') return;
            var total = e.response.Data.length;
            window.getNotifManagerInstance().notify(notifEvents.report.oneTimeRepBound, total);
        } catch (ex) {
            if (window.console) console.log(ex);
        }
    }
	function onLinesBound(e) {
		var grid = e.sender;
		var data = grid.dataSource.data();
		$.each(data, function (i, row) {
            if (!row.IsGRPRefundable) {
                $('tr[data-uid="' + row.uid + '"] ').find(".k-grid-RequestRefund").hide();
            }
		});
	}
</script>
<style>
.k-button[class*="k-grid-"], .k-button[class*="k-grid-"]:hover { font-size:0.9em; line-height:0.9em; text-decoration:none !important; display:block; border:solid 1px #808080 !important; }
</style>
@Html.Partial("~/Views/Shared/Account/_GrpSubmitWindow.cshtml")


@(Html.Kendo().Grid<OrderLineDTO>()
      .Name("UserPurchaseReport")
      .TableHtmlAttributes(new { @style = "background-image: none !important;" })
      .Columns(columns =>
        {
            columns.Bound(p => p.ItemName).Title("Course");
            columns.Bound(p => p.Seller.FullName).Title("Author");
            columns.Bound(p => p.Seller.Email).ClientTemplate("<a href='mailto:#=Seller.Email#' class='inv-lnk'>#=Seller.Email#</a>").Title("Email");
            columns.Bound(p => p.OrderDate).Title("Date").Format("{0:d}");
            columns.Bound(p => p.TotalAmount).Title("Amount").ClientTemplate("#=kendo.toString(TotalAmount, \"n2\")##=Currency.Symbol#").Width(100);//.ClientFooterTemplate("Total: #= kendo.toString(sum, 'c0') #");
            columns.Command(c => c.Custom("Request Refund").Click("opepGrpSubmitWindow").HtmlAttributes(new { @class = "_action" })).Width(80).Title(" ");
        })
        .Events(e => e.DataBound("onLinesBound"))
        .Sortable()
        .Pageable(pager => pager.Numeric(true).Refresh(true))
        .Filterable(f => f.Enabled(false))
        .ClientDetailTemplateId("template-payment")
        .DataSource(dataSource => dataSource.Ajax()
                        .Model(model => model.Id(p => p.LineId))
                        .Read(read => read.Action("GetUserPurchases", "User", new { area = "UserPortal" }).Type(HttpVerbs.Get)).Events(e => e.RequestEnd("onPurchaseRepRequestEnd"))
                        .PageSize(8))
)
