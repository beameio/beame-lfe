@using System.Collections
@using Kendo.Mvc.UI
@using LFE.Core.Enums
@using LFE.Core.Utils
@using LFE.DataTokens
@using LFE.Portal.Areas.PortalAdmin.Helpers
@using LFE.Portal.Areas.PortalAdmin.Models

@{
    ViewBag.Title = "Videos Report";
    Layout = "~/Areas/PortalAdmin/Views/Shared/_Layout.cshtml";
}

@{
    var dates = (ReportEnums.ePeriodSelectionKinds.thisMonth | ReportEnums.ePeriodSelectionKinds.week
                 | ReportEnums.ePeriodSelectionKinds.lastMonth | ReportEnums.ePeriodSelectionKinds.last90
                 | ReportEnums.ePeriodSelectionKinds.last180 | ReportEnums.ePeriodSelectionKinds.all).ToTranslatedArray();

    ViewData["periodKinds"] = dates;
}

<h2 class="page-title">Videos report</h2>

<script>
    var fltrUserId, fltrAttachedOnly;
    function onPeriodKindSelected() {
        //var dataItem = this.dataItem(e.item.index());
        window.getNotifManagerInstance().notify(notifEvents.object.rebindReport, null);
    }

    function onUserSelected(e) {
        var dataItem = this.dataItem(e.item.index());
        var id = dataItem.UserId;
        window.fltrUserId = id;
        window.getNotifManagerInstance().notify(notifEvents.object.rebindReport, null);
    }

    function onUserAu() {
        return {
            name: $("#ddlUser").val()
            , email: null
           
        };
    }

    function getVideosRequestParams() {
        var period = $('#periodSelectionKind').data("kendoDropDownList") != undefined ? $('#periodSelectionKind').data("kendoDropDownList").value() : '@(((int)ReportEnums.ePeriodSelectionKinds.lastMonth).ToString())';
        return {
            periodSelectionKind: period
            , userId: fltrUserId
             , attachedOnly: fltrAttachedOnly
        };
    }

    function onAttachedChanged($this) {
        window.fltrAttachedOnly = $($this).is(":checked");
        window.getNotifManagerInstance().notify(notifEvents.object.rebindReport, null);

    }

    function clearFilters() {
        $('#periodSelectionKind').data("kendoDropDownList").value('@(((int)ReportEnums.ePeriodSelectionKinds.lastMonth).ToString())');
        $('#chkAttachedOnly').prop('checked', false);
        var c2 = $('#ddlUser').data("kendoAutoComplete"); if (c2 != undefined) c2.value(null);

        window.fltrUserId = null;

        window.getNotifManagerInstance().notify(notifEvents.object.rebindReport, null);
    }
</script>

<div id="rep-param-row" style="margin: 0 0 25px 0">
    <div id="period-combo-container" class="inline" style="visibility: hidden;">
        @(Html.Kendo().DropDownList()
              .Name("periodSelectionKind")
              .DataTextField("Title")
              .DataValueField("Value")
              .BindTo((IEnumerable)ViewData["periodKinds"])
              .HtmlAttributes(new { style = "width:250px", @class = "combo-ps" })
              .Events(e => e.Select("onPeriodKindSelected"))
                //  .Value(((int)WebHelper.DEFAULT_PERIOD_SELECTION).ToString())
        )
        <script>
            $(document).ready(function () {
                //   $('#periodSelectionKind').data("kendoDropDownList").value('@(((int)WebHelper.DEFAULT_PERIOD_SELECTION).ToString())');
                setVisibility('#period-combo-container', true);
            });
        </script>
    </div>

    <div class="inline" style="margin-left: 25px;">
        @(Html.Kendo().AutoComplete()
              .Name("ddlUser")
              .DataTextField("FullName")
              .Placeholder(" find by user")
              .Filter("contains")
              .MinLength(2)
              .Template("<img class=\"user-thumb inline\" src=\"${PictureUrl}\" alt=\"${FullName}\" />" +
                        "<label class=\"inline\" style=\"margin:0 0 0 10px\">${FullName}</label>")
              .HtmlAttributes(new { style = "width:250px", @class = "au-filt" })
              .Events(e => e.Select("onUserSelected"))
              .DataSource(source => source.Read(read => read.Action("FindUsers", "User").Data("onUserAu")).ServerFiltering(true))
        )
    </div>
    
    <div class="inline" style="margin: 0 0 0 25px">
        <label for="chkAttachedOnly">Attached Only</label>
        <input type="checkbox" id="chkAttachedOnly" onchange="onAttachedChanged(this)" />
    </div>  

    <div class="inline" style="margin: 0 0 0 30px">
        <a href="#" onclick="clearFilters()" class="a-clear">clear filters</a>
    </div>
</div>
<script>
    $(document).ready(function () {

        window.getNotifManagerInstance().unsubscribe(notifEvents.object.rebindReport, rebindVideosGrid, null);
        window.getNotifManagerInstance().subscribe(notifEvents.object.rebindReport, rebindVideosGrid, null);

        clearFilters();
    });

    function rebindVideosGrid() {
        $('#VideoReport').data("kendoGrid").dataSource.read();
    }
    function notify2Player(id, name) {
        var token = { id: id, name: name };
        window.getNotifManagerInstance().notify(notifEvents.video.openPlayer, token);
    }
</script>



@(Html.Kendo().Grid<VideoDTO>()
        .Name("VideoReport")
        .TableHtmlAttributes(new { @style = "background-color: #fff !important;background-image: none !important;" })
        .Columns(columns =>
        {
            columns.Bound(p => p.videoId).Title("Id").Width(40);
            columns.Bound(p => p.user.FullName).Title("Author").ClientTemplate("<span data-val='${user.UserId}' title='click to view user details' class='list-cmd usr-btn'>#=user.FullName#</a>");
            columns.Bound(p => p.name).Title("Title").ClientTemplate("<a href='javascript:notify2Player(#=identifier#,\"#=Encoder.htmlEncode(name)#\")' style='margin:3px 0 0' class='list-cmd' >${name}</a>");
            columns.Bound(p => p.identifier).Title("BcIdentifier").Width(120).Sortable(false);
            columns.Bound(p => p.addon).Title("Date Added").Format("{0:d}").Width(120);
            columns.Bound(p => p.inUse).Title("In Use").Width(120);
            columns.Bound(p => p.duration).Title("Duration").Width(120).Sortable(false);
        })
        .AutoBind(false)
        .Sortable()
        .Events(e => e.DataBound("boundGridUserDetails"))
        .Pageable(pager => pager.Enabled(true).Refresh(true).PageSizes(true))
        .Filterable(f => f.Enabled(false))
        .DataSource(dataSource => dataSource.Ajax().ServerOperation(false)
                            .PageSize(20)
                            .Read(read => read.Action("GetVideos", "Report").Data("getVideosRequestParams").Type(HttpVerbs.Get)).ServerOperation(true)
                            .Model(model => model.Id(p => p.identifier))
    ))