@model LFE.Portal.Areas.AuthorAdmin.Models.SalesDetailsWindowToken
@using LFE.DataTokens

<script>
function onItemListBound(e) {
}
</script>
@{
    var queryParams = new
    {
        area = "AuthorAdmin",
        saleBoxType = Model.Type,
        CurrencyId = Model.Filter.CurrencyId,
        StoreId = Model.Filter.StoreId,
        from = Model.Filter.DateRange.from,
        to = Model.Filter.DateRange.to
    };
}

@(Html.Kendo().Grid<BaseOrderLineDTO>()
        .Name("grid")
        .TableHtmlAttributes(new { @style = "background-color: #fff !important;background-image: none !important;" })
        .Columns(columns =>
        {
            columns.Bound(p => p.ItemName).Title("Course");
            columns.Bound(p => p.WebStore.Name).Title("Store").Width(120);
            columns.Bound(p => p.WebStoreOwner.FullName).Title("Store Owner").Width(120);
            columns.Bound(p => p.Seller.FullName).Title("Seller").Width(120);
            columns.Bound(p => p.OrderDate).Title("Order Date").Format("{0:d}").Width(120);
            columns.Bound(p => p.Price).Format("{0:c}").Width(120);
            columns.Bound(p => p.Discount).Format("{0:c}").Width(120);
            columns.Bound(p => p.TotalPrice).Format("{0:c}").Width(120);
            columns.Bound(p => p.TotalAmount).Title("Amount").Format("{0:c}").Width(120);
            columns.Bound(p => p.Buyer.FullName).Title("Buyer").Width(120);
        })
        .AutoBind(true)
        .Sortable()
        .Pageable(pager => pager.Enabled(false))
        .Filterable(f => f.Enabled(false))
        .Events(e => e.DataBound("onItemListBound"))
        .Editable(e => e.DisplayDeleteConfirmation(false))
        .DataSource(dataSource => dataSource.Ajax()
                    .Model(model => model.Id(p => p.OrderNumber))
                    .Read(read => read.Action("GetAuthorSales", "Home",
                        queryParams).
                        Type(HttpVerbs.Get)).ServerOperation(false))
)


