@using LFE.DataTokens
@model LFE.Portal.Areas.AuthorAdmin.Models.SalesReportConfigToken


<script>
	$(document).ready(function () {		
		window.getNotifManagerInstance().subscribe(notifEvents.report.periodChanged, rebindTrxGrid, null);
	});

	function rebindTrxGrid() {
		$('#AuthorTrxReport').data("kendoGrid").dataSource.read();
	}
	function onSalesChartRequestEnd(e) {
		try {
			if (e.response.AggregateResults.length == 0) return;
			var total = parseInt(e.response.AggregateResults[0].Value);
			window.getNotifManagerInstance().notify(notifEvents.report.salesRequestEnd, total);
		} catch (ex) {
		    if (window.console) console.log(ex);
		}
	}
</script>

@(Html.Kendo().Grid<OrderLineDTO>()
	  .Name("AuthorTrxReport")
	  .TableHtmlAttributes(new { @style = "background-image: none !important;" })
	  .Columns(columns =>
	  {
		  columns.Bound(p => p.ItemName).Title("Item");
		  columns.Bound(p => p.Buyer.FullName).Title("Learner");
		  columns.Bound(p => p.OrderDate).Title("Date").Format("{0:d}");
		  columns.Bound(p => p.TotalPrice).Title("Amount").Format("{0:c}").Width(100).ClientFooterTemplate("Total: #= kendo.toString(sum, 'c0') #"); 
	  })
	  .Sortable()
	  .Pageable(pager => pager.Numeric(true).PageSizes(Model.showPageSizes))
	  .Filterable(f => f.Enabled(false))
	  .DataSource(dataSource => dataSource.Ajax()
								.Aggregates(aggregates => aggregates.Add(p => p.TotalPrice).Sum())
							    .Model(model => model.Id(p => p.LineId))
                                .Read(read => read.Action("GetAuthorSales", "Author").Data("getPeriodKind").Type(HttpVerbs.Get)).Events(e => e.RequestEnd("onSalesChartRequestEnd"))
							    .PageSize(Model.pageSize))
	)