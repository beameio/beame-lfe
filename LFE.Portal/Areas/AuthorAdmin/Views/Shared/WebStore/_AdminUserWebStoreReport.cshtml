@using LFE.DataTokens
@model UserViewDto
<script>
    function onStoresBound(e) {
        var total = e.sender.dataSource._data.length;
        window.getNotifManagerInstance().notify(notifEvents.report.storesBound, total);
    }
</script>


<div id="d-ws-rep-container">
	<div class="list-manage-row">
		<div class="count-title" id="d-ws-total">0</div>
		<a href="@Url.Action("AdminEditStore","WebStore",new{area="AuthorAdmin",id=Guid.NewGuid(),Model.userId})" class="add-btn-h">add new store</a>
	</div> 
	
	@(Html.Kendo().Grid <WebStoreGridDTO>()    
						.Name("WsStoresReport")
						.TableHtmlAttributes(new{@style="background-color: #fff !important;background-image: none !important;"})
						.Columns(columns => {
                            columns.Bound(m => m.Name).ClientTemplate("<a href='" + Url.Action("AdminEditStore", "WebStore", new { area = "AuthorAdmin", Model.userId }) + "&id=#=Uid#' style='margin:3px 0 0' class='list-cmd' >${Name}</a>").Title("Name of Store");
							columns.Bound(p => p.TrackingID).Title("TrackingID");
                            columns.Bound(p => p.AddOn).Title("Date Added").Format("{0:d}").Width(120);
                            columns.Bound(p => p.CoursesCount).Title("Number of Courses").Width(150);
                            columns.Bound(p => p.SubscribersCount).Title("Number of Subscribers").Width(150);
                            columns.Bound(m => m.StoreId).ClientTemplate("<a href='" + Url.Action("AdminEditStore", "WebStore", new { area = "AuthorAdmin", Model.userId }) + "&id=#=Uid#' style='margin:3px 0 0' class='list-cmd' >Edit</a>").Title(" ").Width(50);
                            columns.Command(c => c.Destroy().HtmlAttributes(new { @class = "list-cmd" })).Title(" ").Width(50);
						})          
						.Sortable()
						.Pageable(pager => pager.Enabled(false))
						.Filterable(f=>f.Enabled(false))
						.Events(e=>e.DataBound("onStoresBound"))
						.DataSource(dataSource => dataSource.Ajax()
											.Model(model => model.Id(p => p.StoreId))
											.Read(read => read.Action("GetUserStores", "WebStore", new {area="AuthorAdmin" ,Model.userId }).Type(HttpVerbs.Get)).ServerOperation(false)
											.Destroy(d=>d.Action("DestroyStore","WebStore",new{area="AuthorAdmin"})))
	)  

	
</div>